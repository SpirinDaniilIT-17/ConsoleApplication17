#include <iostream>
#include <string>
#include <cmath>

bool numm(const std::string& str) {//функц для проверки, является ли строка числом
    for (char const& c : str) {
        if (!isdigit(c)) return false;//проверка на только цифры
    }
    return true;
}
int main() {
    long long m;//переменная для хранения целого числа m
    int n;//переменная для хранения количества знаков n (должно быть >= 50)
    std::string input;//хранение строк

    while (true) {//цикл для ввода неотрицательного целого числа m
        std::cout << "\nВведите целое неотрицательное число m: ";
        std::cin >> input;//считываем входные данные 

        //проверка на корректность ввода m
        if (numm(input)) {
            m = std::stoll(input);//преобразуем строку в long long
            if (m >= 0)//проверяем, что число неотрицательное
                break;//если все ок, выходим из цикла
            else//некорректный ввод
                std::cout << "Ошибка: число должно быть неотрицательным." << std::endl;
        }
        else {
            std::cout << "Ошибка: введите корректное целое число." << std::endl;
        }
    }

    while (true) {//цикл для ввода количества знаков n
        std::cout << "Введите количество знаков n (n >= 50): ";
        std::cin >> input; //считываем входные данные как строку

        if (numm(input)) {//проверка на корректность ввода n
            n = std::stoi(input);//преобразуем строку в int
            if (n >= 50) //проверяем, что n >= 50
                break; //если все ок,то выходим из цикла

            else  //неккоректный ввод пользователя
                std::cout << "Ошибка: n должно быть больше или равно 50." << std::endl;
        }
        else {
            std::cout << "Ошибка: введите корректное целое число." << std::endl;
        }
    }

    double sqrt_m = sqrt(m); //вычисляем квадратный корень из m с заданной точностью

    //устанавливаем необходимую точность вывода
    std::cout << "Квадратный корень из " << m << " с " << n << " знаками после запятой: ";
    std::cout.precision(n); //устанавливаем точность
    std::cout << std::fixed << sqrt_m << std::endl; //выводим результат,std::fixed нужен для плавающей запятой

    return 0;
}